name: Draft release

on:
  workflow_call:
    inputs:
      dh_name:
        type: string
        required: true
      deploy_repository:
        type: string
        required: true
      deploy_local_path:
        type: string
        required: true
      product_type:
        type: string
        required: true

    secrets:
      tg_token:
        required: true
      tg_chat_id:
        required: true
      deploy_repo_ssh_key:
        required: true

jobs:

  update_production_configurations:
    runs-on: ubuntu-latest
    steps:

      - name: Setup variables
        run: |
          echo DOCKER_IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo APP_NAME=$(awk -F "/" '{print $2}' <<< ${{ github.repository }}) >> $GITHUB_ENV

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          flavor: |
            latest=false
          tags: 
            type=semver,pattern={{version}}

      - name: Checkout configs repo
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.deploy_repository }}
          path: ${{ inputs.deploy_local_path }}
          ssh-key: ${{ secrets.deploy_repo_ssh_key }}

      - name: Update image version
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'helm/${{ env.APP_NAME }}/production-values.yaml'
          propertyPath: 'image.tag'
          value: ${{ needs.build.outputs.docker_tag }}
          repository: ${{ inputs.deploy_repository }}
          workDir: ${{ inputs.deploy_local_path }}
          updateFile: true
          createPR: false
          commitChange: false

      - name: Install helm
        uses: yamaks2306/kube-tools@master
        with:
          helm: 3.7.2

      - name: Lint helm
        run: |
          helm lint ${{ inputs.deploy_local_path }}/helm/${{ env.APP_NAME }} --values ${{ inputs.deploy_local_path }}/helm/${{ env.APP_NAME }}/production-values.yaml

      - name: Generate manifests with Helm
        run: | 
          helm template production-${{ env.APP_NAME }} ${{ inputs.deploy_local_path }}/helm/${{ env.APP_NAME }} --values ${{ inputs.deploy_local_path }}/helm/${{ env.APP_NAME }}/production-values.yaml > ${{ inputs.deploy_local_path }}/apps/${{ env.APP_NAME }}/production/${{ env.APP_NAME }}.yaml

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'sarif'
          output: 'manifest-report.sarif'
          exit-code: '0'
          scan-ref: '${{ inputs.deploy_local_path }}/apps/${{ env.APP_NAME }}/production/'

      - name: Upload report artifact
        uses: actions/upload-artifact@v3
        with:
          name: manifest-report
          path: ./manifest-report.sarif

      - name: Commit and push changes
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.deploy_repo_ssh_key }}'
          cd ${{ inputs.deploy_local_path }}
          git config user.name github-action
          git config user.email github-actions@github.com
          git add .
          git commit -m 'Image version updated ${{ needs.build.outputs.docker_tag }}'
          git push

      - name: Notify Telegram
        uses: yamaks2306/telegram-notification@main
        if: always()
        with:
          token: ${{ secrets.tg_token }}
          chat_id: ${{ secrets.tg_chat_id }}
          docker_tags: ${{ needs.build.outputs.docker_tag }}


